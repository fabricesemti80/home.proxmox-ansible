---
# ---------------------------------------------------------------------------- #
#                                  PVE cluster                                 #
# ---------------------------------------------------------------------------- #
pve_group: pve01
pve_watchdog: ipmi
# pve_ssl_private_key: "{{ lookup('file', pve_group + '/' + inventory_hostname + '.key') }}"
# pve_ssl_certificate: "{{ lookup('file', pve_group + '/' + inventory_hostname + '.pem') }}"
pve_cluster_enabled: yes
# pve_groups:
#   - name: ops
#     comment: Operations Team
# pve_users:
#   - name: admin1@pam
#     email: admin1@lab.local
#     firstname: Admin
#     lastname: User 1
#     groups: [ "ops" ]
#   - name: admin2@pam
#     email: admin2@lab.local
#     firstname: Admin
#     lastname: User 2
#     groups: [ "ops" ]
# pve_acls:
#   - path: /
#     roles: [ "Administrator" ]
#     groups: [ "ops" ]

# ---------------------------------------------------------------------------- #
#                        PVE Users and Permissions                             #
# ---------------------------------------------------------------------------- #

# Define a group for API automation operations
pve_groups:
- name: api-automation
  comment: API Automation Tools Group (Packer, Terraform, etc.)

# Create the packer user
pve_users:
- name: packer@pve
  email: automations.fs@gmail.com
  firstname: Packer
  lastname: Automation
  groups: [ "api-automation" ]
- name: terraform@pve
  email: automations.fs@gmail.com
  firstname: Terraform
  lastname: Automation
  groups: [ "api-automation" ]

# Set appropriate ACLs for the API automation group
pve_acls:
- path: /
  roles: [ "PVEVMAdmin", "PVEPoolAdmin" ] # VM administration and pool management roles
  groups: [ "api-automation" ]
- path: /storage
  roles: [ "PVEDatastoreAdmin" ] # Storage administration for pool management
  groups: [ "api-automation" ]
- path: /sdn
  roles: [ "PVESDNAdmin" ] # SDN administration for network management
  groups: [ "api-automation" ]

# ---------------------------------------------------------------------------- #
#                                  PVE storage                                 #
# ---------------------------------------------------------------------------- #
# pve_zfs_create_volumes:
#   - rpool/iso
pve_storages:
# - name: zfsdir
#   type: dir
#   path: /rpool/zfsdir
#   content:
#     [
#       "snippets", # Snippet files, for example guest hook scripts
#       "images", # QEMU/KVM VM images.
#       "rootdir" # Allow to store container data.
#     ]
- name: localdir
  type: dir
  content:
    [
      "snippets", # Snippet files, for example guest hook scripts
      "images", # QEMU/KVM VM images.
      "rootdir"
    ] # Allow to store container data.
  path: /plop
- name: nfs-proxmox-backup
  type: nfs
  server: 10.0.40.2
  export: /proxmox-backup
  content: [ "backup" ] # Backup files (vzdump).
  # maxfiles: 4 # only for Backup storage!
- name: nfs-proxmox-iso
  type: nfs
  server: 10.0.40.2
  export: /proxmox-iso
  content: [ "iso" ] # ISO images
- name: nfs-proxmox-template
  type: nfs
  server: 10.0.40.2
  export: /proxmox-template
  content: [ "vztmpl" ] # Container templates
- name: ceph1
  type: rbd
  content: [ "images", "rootdir" ]
  nodes: "pve-0,pve-1,pve-2" # Comma-separated string
  # username: admin
  pool: vm-storage
  krbd: yes
  monhost:
  - 10.0.70.10
  - 10.0.70.11
  - 10.0.70.12

# ---------------------------------------------------------------------------- #
#                             PVE networking                                   #
# ---------------------------------------------------------------------------- #
pve_ssh_port: 22
interfaces_template: "interfaces-{{ pve_group }}.j2"
# ---------------------------------------------------------------------------- #
#                                     CEPH                                     #
# ---------------------------------------------------------------------------- #
pve_ceph_enabled: true

pve_ceph_network: "10.0.70.0/24"
pve_ceph_cluster_network: "10.0.70.0/24"

pve_ceph_osds:
# OSD with everything on the same device - using NVMe for better performance
- device: /dev/nvme0n1

# pve_ceph_crush_rules:
# - name: replicated_rule
#   type: host
#   failure_domain: osd
# - name: ssd
#   type: host
#   class: ssd
#   failure_domain: osd

pve_ceph_pools:
- name: ssd
  pgs: 32
  rule: ssd
  application: rbd
  storage: true
  size: 2
  min-size: 1

- name: vm-storage
  pgs: 128
  rule: replicated_rule
  application: rbd
  autoscale_mode: "on"
  storage: true
# pve_ceph_fs:
#   - name: cephfs-vm
#     pgs: 64
#     rule: replicated_rule
#     storage: true
#     mountpoint: /mnt/pve/cephfs-vm
#     content: ["images", "rootdir"] # For VM images and container root directories

# ---------------------------------------------------------------------------- #
#                              Gmail SMTP Configuration                        #
# ---------------------------------------------------------------------------- #
# Gmail SMTP settings for Proxmox notifications
# Credentials are loaded from environment variables via .envrc
# IMPORTANT: Use Gmail App Password, not your regular password
# Generate at: https://myaccount.google.com/apppasswords
gmail_smtp_username: "{{ lookup('env', 'GMAIL_SMTP_USERNAME') }}"
gmail_smtp_password: "{{ lookup('env', 'GMAIL_SMTP_PASSWORD') }}"
gmail_smtp_from_name: "Proxmox Cluster {{ pve_group }}"
proxmox_notification_test: "{{ lookup('env', 'GMAIL_SMTP_TEST') | default('false') | bool }}"

# ---------------------------------------------------------------------------- #
#                              Backup Configuration                            #
# ---------------------------------------------------------------------------- #
# Automated backup configuration for VMs and templates
# Backups are stored on NFS share nfs-proxmox-backup

# VM Backup Job - Production VMs
vm_backup:
  name: "vm-backup"
  schedule: "01:00" # 1:00 AM (24-hour format)
  dow: "sun" # Sunday
  vm_ids: [ 1020, 1021 ] # VM IDs to backup (changeable)
  enabled: true
  compress: "zstd" # Best compression
  mode: "snapshot" # Snapshot mode (no downtime)
  retention:
    keep_daily: 7 # Keep daily backups for 1 week
    keep_weekly: 4 # Keep weekly backups for 1 month
    keep_monthly: 3 # Keep monthly backups for 3 months
  notification: true
  email_on_failure: false # Send notifications always (not just on failure)

# Template Backup Job - VM Templates
template_backup:
  name: "template-backup"
  schedule: "02:00" # 2:00 AM (24-hour format)
  dow: "sun" # Sunday (after VM backup)
  vm_ids: [ 6006 ] # Template IDs to backup (changeable)
  enabled: true
  compress: "zstd"
  mode: "snapshot"
  retention:
    keep_daily: 3 # Templates change less frequently
    keep_weekly: 2
    keep_monthly: 6 # Keep more monthly backups for templates
  notification: true
  email_on_failure: false # Send notifications always (not just on failure)

# Global backup settings
backup_global:
  max_workers: 1 # One backup at a time to avoid I/O contention
  bandwidth_limit: 0 # No bandwidth limit
  ionice: 7 # Lowest I/O priority (don't impact VMs)
  lockwait: 180 # Wait up to 3 hours for VM lock

# Backup storage (must match storage configuration above)
backup_storage: "nfs-proxmox-backup"

# Email notifications (uses Gmail SMTP configuration)
backup_notification_email: "emilfabrice@gmail.com"

# ---------------------------------------------------------------------------- #
#                              Resource Pools Configuration                    #
# ---------------------------------------------------------------------------- #
# Proxmox resource pools for organizing VMs and resources
# API credentials for pool management (reuse existing API tokens)
pve_api_user: "terraform@pve"
pve_api_token_id: "automation"
pve_api_token_secret: "{{ lookup('file', 'tokens/terraform@pve-automation.token') | regex_search('TOKEN_SECRET=(.+)', '\\1') | first }}"

# Define resource pools
pve_pools:
- name: "production"
  comment: "Production VMs and critical services"
  vms: [ 1020, 1021 ] # Add your production VM IDs here
  storage: [ "ceph1", "nfs-proxmox-backup" ]
- name: "development"
  comment: "Development and testing environment"
  vms: [] # Add development VM IDs as needed
  storage: [ "localdir", "ceph1" ]
- name: "templates"
  comment: "VM templates and base images"
  vms: [ 6006 ] # Template VM IDs
  storage: [ "nfs-proxmox-template", "nfs-proxmox-iso" ]
- name: "automation"
  comment: "Infrastructure automation tools (Packer, Terraform)"
  vms: [] # VMs created by automation tools
  storage: [ "ceph1", "localdir" ]
